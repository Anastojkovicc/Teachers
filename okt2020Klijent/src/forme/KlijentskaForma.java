/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package forme;

import coms.KomunikacijaSaServerom;
import domen.Korisnik;
import domen.Nastavnik;
import domen.PredajePredmet;
import domen.Predmet;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import konstante.Operacija;
import modeli.ModelTabeleAngazovanja;
import transfer.KlijentskiZahtev;
import transfer.ServerskiOdgovor;

/**
 *
 * @author ANA
 */
public class KlijentskaForma extends javax.swing.JFrame {

    Korisnik ulogovani;

    /**
     * Creates new form KlijentskaForma
     */
    public KlijentskaForma(Korisnik korisnik) {
        initComponents();
        setLocationRelativeTo(null);
        ulogovani = korisnik;
        srediTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnSacuvaj = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAngazovanja = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnDodaj.setText("Dodaj angazovanje");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi angazovanje");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnSacuvaj.setText("Sacuvaj sve");
        btnSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSacuvajActionPerformed(evt);
            }
        });

        tblAngazovanja.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblAngazovanja);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnObrisi))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSacuvaj))
                .addContainerGap(45, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnDodaj)
                    .addComponent(btnObrisi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(btnSacuvaj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        DodajAngazovanje da = new DodajAngazovanje(this, true, ulogovani);

        da.pack();
        da.setVisible(true);
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int red = tblAngazovanja.getSelectedRow();
        if (red != -1) {
            ModelTabeleAngazovanja mta = (ModelTabeleAngazovanja) tblAngazovanja.getModel();
            mta.obrisiRed(red);
        } else {
            JOptionPane.showMessageDialog(this, "Morate da oznacite red");
            return;
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSacuvajActionPerformed
        ModelTabeleAngazovanja mta = (ModelTabeleAngazovanja) tblAngazovanja.getModel();
        ArrayList<PredajePredmet> lista = mta.getLista();
        for (int i = 0; i < lista.size(); i++) {
            Nastavnik n = lista.get(i).getNastavni();
            ArrayList<Predmet> listaPredmeta = new ArrayList<>();
            for (int j = i + 1; j < lista.size(); j++) {

                if (n.equals(lista.get(j).getNastavni()) && !listaPredmeta.contains(lista.get(j).getPredmet())) {
                    listaPredmeta.add(lista.get(j).getPredmet());
                }
                if (n.equals(lista.get(j).getNastavni()) && listaPredmeta.contains(lista.get(j).getPredmet())) {
                    JOptionPane.showMessageDialog(this, "Jedan prof moze jednom jedan predmet");
                    return;
                }
            }
            if (listaPredmeta.size() > 5 || listaPredmeta.size() < 0) {
                JOptionPane.showMessageDialog(this, "Jedan prof moze na 5 predmeta");
                return;
            }

        }

        KlijentskiZahtev kz = new KlijentskiZahtev();
        kz.setOperacija(Operacija.SACUVAJ_ANGAZOVANJA);
        kz.setParametar(lista);
        KomunikacijaSaServerom.getInstanca().posaljiZahtev(kz);
        ServerskiOdgovor so = KomunikacijaSaServerom.getInstanca().primiOdgovor();
        JOptionPane.showMessageDialog(this, so.getPoruka());
        boolean sacuvano = (boolean) so.getOdgovor();
        if (sacuvano) {
            mta.setLista(new ArrayList<>());
            return;
        }
    }//GEN-LAST:event_btnSacuvajActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnSacuvaj;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblAngazovanja;
    // End of variables declaration//GEN-END:variables

    private void srediTabelu() {
        ModelTabeleAngazovanja mta = new ModelTabeleAngazovanja();
        tblAngazovanja.setModel(mta);
    }

    public void dodajUTabelu(PredajePredmet pp) {
        ModelTabeleAngazovanja mta = (ModelTabeleAngazovanja) tblAngazovanja.getModel();
        mta.dodajUTabelu(pp);
    }
}
